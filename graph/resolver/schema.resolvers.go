package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.74

import (
	"context"
	"fmt"

	"github.com/easysun/linkage/graph/generated"
	"github.com/easysun/linkage/graph/model"
)

// CreateProfile is the resolver for the createProfile field.
func (r *mutationResolver) CreateProfile(ctx context.Context, name string, birthDate *string, isUnborn bool) (*model.Profile, error) {
	panic(fmt.Errorf("not implemented: CreateProfile - createProfile"))
}

// AddRelationship is the resolver for the addRelationship field.
func (r *mutationResolver) AddRelationship(ctx context.Context, fromID string, toID string, title string) (*model.Relationship, error) {
	panic(fmt.Errorf("not implemented: AddRelationship - addRelationship"))
}

// Profiles is the resolver for the profiles field.
func (r *queryResolver) Profiles(ctx context.Context) ([]*model.Profile, error) {
	panic(fmt.Errorf("not implemented: Profiles - profiles"))
}

// Profile is the resolver for the profile field.
func (r *queryResolver) Profile(ctx context.Context, id string) (*model.Profile, error) {
	panic(fmt.Errorf("not implemented: Profile - profile"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
